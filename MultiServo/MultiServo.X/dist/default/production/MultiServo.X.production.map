Microchip MPLAB XC8 Compiler V1.33 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.33\dat\en_msgs.txt -cs \
  -h+dist/default/production\MultiServo.X.production.sym \
  --cmf=dist/default/production\MultiServo.X.production.cmf -z -Q18F2520 \
  -oC:\Users\Jim\AppData\Local\Temp\s5ss.6 \
  -Mdist/default/production/MultiServo.X.production.map -E1 -ver=XC8 \
  -ASTACK=018Ch-05ffh -pstack=STACK -ACODE=00h-07FFFh -ACONST=00h-07FFFh \
  -ASMALLCONST=0600h-06FFhx122 -AMEDIUMCONST=0600h-07FFFh -ACOMRAM=01h-07Fh \
  -AABS1=00h-05FFh -ABIGRAM=01h-05FFh -ARAM=080h-0FFh,0100h-01FFhx5 \
  -ABANK0=080h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ABANK3=0300h-03FFh -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh \
  -ASFR=0F80h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init,end_init \
  -pramtop=0600h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE \
  C:\Users\Jim\AppData\Local\Temp\s5ss.obj \
  dist/default/production\MultiServo.X.production.obj 

Object code version is 3.11

Machine type is 18F2520

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Jim\AppData\Local\Temp\s5ss.obj
                end_init                             18       18        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\MultiServo.X.production.obj
                intcode                               8        8       10        4       0
                smallconst                          600      600       9E      300       0
                text25                             1FFE     1FFE       16      34F       0
                intcode_body                       168C     168C      124      34F       0
                text23                             18AC     18AC       FC      34F       0
                text22                             1D66     1D66       56      34F       0
                text21                             1F82     1F82       26      34F       0
                text20                             1E64     1E64       52      34F       0
                text19                             1EB6     1EB6       42      34F       0
                text18                             2028     2028        C      34F       0
                text17                             1534     1534      158      34F       0
                text16                              69E      69E      78C      34F       0
                text15                             1FC8     1FC8       20      34F       0
                text14                             1A8E     1A8E       CA      34F       0
                text13                             19A8     19A8       E6      34F       0
                text12                             1C14     1C14       7A      34F       0
                text11                             1FA8     1FA8       20      34F       0
                text10                             1F30     1F30       2C      34F       0
                text9                              2014     2014       14      34F       0
                text8                              1F5C     1F5C       26      34F       0
                text7                              17B0     17B0       FC      34F       0
                text6                              1C8E     1C8E       78      34F       0
                text5                              1E10     1E10       54      34F       0
                text4                              1DBC     1DBC       54      34F       0
                text3                              1EF8     1EF8       38      34F       0
                text2                              1B58     1B58       BC      34F       0
                text1                              1FE8     1FE8       16      34F       0
                text0                               E2A      E2A      70A      34F       0
                cstackCOMRAM                          1        1       47        1       1
                cstackBANK0                          A5       A5       24       80       1
                cstackBANK1                         100      100       56      100       1
                bssBANK1                            156      156       36      100       1
                dataBANK0                            C9       C9        1       80       1
                bssBANK0                             80       80       25       80       1
                dataCOMRAM                           57       57        4        1       1
                bssCOMRAM                            48       48        F        1       1
                cinit                              1D06     1D06       60      34F       0
                idataBANK0                         2038     2038        1      34F       0
                idataCOMRAM                        2034     2034        4      34F       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             18       18        4         0
                intcode                               8        8       10         0
                reset_vec                             0        0        4         0
                text25                             1FFE     1FFE       16         0
                intcode_body                       168C     168C      124         0
                text23                             18AC     18AC       FC         0
                text22                             1D66     1D66       56         0
                text21                             1F82     1F82       26         0
                text20                             1E64     1E64       52         0
                text19                             1EB6     1EB6       42         0
                text18                             2028     2028        C         0
                text17                             1534     1534      158         0
                text16                              69E      69E      78C         0
                text15                             1FC8     1FC8       20         0
                text14                             1A8E     1A8E       CA         0
                text13                             19A8     19A8       E6         0
                text12                             1C14     1C14       7A         0
                text11                             1FA8     1FA8       20         0
                text10                             1F30     1F30       2C         0
                text9                              2014     2014       14         0
                text8                              1F5C     1F5C       26         0
                text7                              17B0     17B0       FC         0
                text6                              1C8E     1C8E       78         0
                text5                              1E10     1E10       54         0
                text4                              1DBC     1DBC       54         0
                text3                              1EF8     1EF8       38         0
                text2                              1B58     1B58       BC         0
                text1                              1FE8     1FE8       16         0
                text0                               E2A      E2A      70A         0
                cinit                              1D06     1D06       60         0
                idataBANK0                         2038     2038        1         0
                idataCOMRAM                        2034     2034        4         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          600      600       9E         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                          1        1       47         1
                dataCOMRAM                           57       57        4         1
                bssCOMRAM                            48       48        F         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          A5       A5       24         1
                dataBANK0                            C9       C9        1         1
                bssBANK0                             80       80       25         1

        CLASS   BANK1          
                cstackBANK1                         100      100       56         1
                bssBANK1                            156      156       36         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00005A  00005B         1       1  COMRAM  
                intcode                        000008  000014  00001C         4       0  CODE    
                bssBANK0                       000080  00004A  0000CA        80       1  BANK0   
                cstackBANK1                    000100  00008C  00018C       100       1  BANK1   
                smallconst                     000600  00009E  00069E       300       0  SMALLCON
                text16                         00069E  00199B  002039       34F       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000CA-0000FF               36
        BANK1            00018C-0001FF               74
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BIGRAM           00005B-00007F               25
                         0000CA-0000FF               36
                         00018C-0005FF              474
        CODE             000004-000007                4
                         00001C-0005FF              5E4
                         002039-007FFF             5FC7
        COMRAM           00005B-00007F               25
        CONST            000004-000007                4
                         00001C-0005FF              5E4
                         002039-007FFF             5FC7
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      002039-007FFF             5FC7
        RAM              0000CA-0000FF               36
                         00018C-0005FF              100
        SFR              000F80-000FFF               80
        SMALLCONST       002039-007FFF              100
        STACK            00018C-0005FF              474

                                  Symbol Table

?_PIDcontrol                    cstackCOMRAM 000036
?___aldiv                       cstackCOMRAM 000012
?___lmul                        cstackCOMRAM 000018
?___lwdiv                       cstackCOMRAM 000012
?___lwmod                       cstackCOMRAM 000019
?___wmul                        cstackCOMRAM 000012
?_abs                           cstackCOMRAM 000012
?_atoi                          cstackCOMRAM 000018
?_printf                        cstackCOMRAM 00001E
?_readAD                        cstackCOMRAM 000012
?_readServoPot                  cstackCOMRAM 000032
?_windowFilter                  cstackCOMRAM 000018
ADsetChannel@channel            cstackCOMRAM 000012
PIDcontrol@DCorr                cstackBANK0  0000BB
PIDcontrol@DisplayCounter       dataCOMRAM   000057
PIDcontrol@ICorr                cstackBANK0  0000B7
PIDcontrol@PCorr                cstackBANK0  0000B3
PIDcontrol@PIDcorrection        cstackBANK0  0000C5
PIDcontrol@PWMout               cstackBANK0  0000BF
PIDcontrol@diffError            cstackBANK0  0000A5
PIDcontrol@error                cstackCOMRAM 000038
PIDcontrol@intDCorr             cstackBANK0  0000B1
PIDcontrol@intICorr             cstackBANK0  0000AF
PIDcontrol@intPCorr             cstackBANK0  0000AD
PIDcontrol@lngError             cstackBANK0  0000C1
PIDcontrol@pastError            cstackBANK0  0000A9
PIDcontrol@servoID              cstackCOMRAM 000036
SetDutyPWM_A@dutyCycle          cstackCOMRAM 000012
SetDutyPWM_A@lowBits            cstackCOMRAM 000016
SetDutyPWM_A@maskReg            cstackCOMRAM 000018
SetDutyPWM_A@ndutyCycle         cstackCOMRAM 000019
SetDutyPWM_B@dutyCycle          cstackCOMRAM 000012
SetDutyPWM_B@lowBits            cstackCOMRAM 000016
SetDutyPWM_B@maskReg            cstackCOMRAM 000018
SetDutyPWM_B@ndutyCycle         cstackCOMRAM 000019
_ADCON0                         (abs)        000FC2
_ADCON0bits                     (abs)        000FC2
_ADCON1                         (abs)        000FC1
_ADCON2                         (abs)        000FC0
_ADIE                           (abs)        007CEE
_ADIF                           (abs)        007CF6
_ADRESH                         (abs)        000FC4
_ADRESL                         (abs)        000FC3
_ADsetChannel                   text9        002014
_BRGH                           (abs)        007D62
_CCP1CON                        (abs)        000FBD
_CCP1CONbits                    (abs)        000FBD
_CCP2CON                        (abs)        000FBA
_CCP2CONbits                    (abs)        000FBA
_CCPR1L                         (abs)        000FBE
_CCPR2L                         (abs)        000FBB
_CREN                           (abs)        007D5C
_GIE                            (abs)        007F97
_INTCON                         (abs)        000FF2
_LATBbits                       (abs)        000F8A
_NUMbuffer                      bssBANK1     00017B
_OERR                           (abs)        007D59
_PEIE                           (abs)        007F96
_PID                            bssBANK0     000080
_PIDcontrol                     text16       00069E
_PIE1                           (abs)        000F9D
_PIR1bits                       (abs)        000F9E
_PORTCbits                      (abs)        000F82
_PR2                            (abs)        000FCB
_RBPU                           (abs)        007F8F
_RCIE                           (abs)        007CED
_RCIF                           (abs)        007CF5
_RCREG                          (abs)        000FAE
_RX9                            (abs)        007D5E
_SPBRG                          (abs)        000FAF
_SPEN                           (abs)        007D5F
_SREN                           (abs)        007D5D
_SSPIE                          (abs)        007CEB
_SYNC                           (abs)        007D64
_SetDutyPWM_A                   text5        001E10
_SetDutyPWM_B                   text4        001DBC
_T2CON                          (abs)        000FCA
_T2CONbits                      (abs)        000FCA
_TMR1IE                         (abs)        007CE8
_TMR2IE                         (abs)        007CE9
_TMR2IF                         (abs)        007CF1
_TRISA                          (abs)        000F92
_TRISB                          (abs)        000F93
_TRISC                          (abs)        000F94
_TX9                            (abs)        007D66
_TXEN                           (abs)        007D65
_TXIE                           (abs)        007CEC
_TXIF                           (abs)        007CF4
_TXREG                          (abs)        000FAD
_Timer2Flag                     bssBANK0     0000A2
_UARTbuffer                     bssBANK1     000172
_UARTflag                       bssBANK0     0000A3
__CFG_BOREN$OFF                 (abs)        000000
__CFG_CCP2MX$PORTC              (abs)        000000
__CFG_CP0$OFF                   (abs)        000000
__CFG_CP1$OFF                   (abs)        000000
__CFG_CP2$OFF                   (abs)        000000
__CFG_CP3$OFF                   (abs)        000000
__CFG_DEBUG$OFF                 (abs)        000000
__CFG_FCMEN$OFF                 (abs)        000000
__CFG_IESO$OFF                  (abs)        000000
__CFG_LPT1OSC$OFF               (abs)        000000
__CFG_LVP$OFF                   (abs)        000000
__CFG_MCLRE$ON                  (abs)        000000
__CFG_OSC$HS                    (abs)        000000
__CFG_PBADEN$OFF                (abs)        000000
__CFG_PWRT$ON                   (abs)        000000
__CFG_STVREN$OFF                (abs)        000000
__CFG_WDT$OFF                   (abs)        000000
__CFG_XINST$OFF                 (abs)        000000
__HRAM                          (abs)        000000
__Habs1                         abs1         000000
__Hbank0                        bank0        000000
__Hbank1                        bank1        000000
__Hbank2                        bank2        000000
__Hbank3                        bank3        000000
__Hbank4                        bank4        000000
__Hbank5                        bank5        000000
__Hbigbss                       bigbss       000000
__Hbigdata                      bigdata      000000
__Hbigram                       bigram       000000
__Hbss                          bss          000000
__HbssBANK0                     bssBANK0     000000
__HbssBANK1                     bssBANK1     000000
__HbssCOMRAM                    bssCOMRAM    000000
__Hcinit                        cinit        000000
__Hclrtext                      clrtext      000000
__Hcomram                       comram       000000
__Hconfig                       config       30000E
__Hconst                        const        000000
__HcstackBANK0                  cstackBANK0  000000
__HcstackBANK1                  cstackBANK1  000000
__HcstackCOMRAM                 cstackCOMRAM 000000
__Hdata                         data         000000
__HdataBANK0                    dataBANK0    000000
__HdataCOMRAM                   dataCOMRAM   000000
__Heeprom_data                  eeprom_data  000000
__Hend_init                     end_init     00001C
__Hfarbss                       farbss       000000
__Hfardata                      fardata      000000
__Hibigdata                     ibigdata     000000
__Hidata                        idata        000000
__HidataBANK0                   idataBANK0   000000
__HidataCOMRAM                  idataCOMRAM  000000
__Hidloc                        idloc        200008
__Hifardata                     ifardata     000000
__Hinit                         init         000018
__Hintcode                      intcode      000018
__Hintcode_body                 intcode_body 000000
__Hintcodelo                    intcodelo    000018
__Hintentry                     intentry     000000
__Hintret                       intret       000000
__Hintsave_regs                 intsave_regs 000000
__Hirdata                       irdata       000000
__Hmediumconst                  mediumconst  000000
__HnvFARRAM                     nvFARRAM     000000
__Hnvbit                        nvbit        000000
__Hnvrram                       nvrram       000000
__Hparam                        rparam       000000
__Hpowerup                      powerup      000018
__Hram                          ram          000000
__Hramtop                       ramtop       000600
__Hrbit                         rbit         000000
__Hrbss                         rbss         000000
__Hrdata                        rdata        000000
__Hreset_vec                    reset_vec    000004
__Hrparam                       rparam       000000
__Hsfr                          sfr          000000
__Hsmallconst                   smallconst   00069E
__Hspace_0                      (abs)        30000E
__Hspace_1                      (abs)        00018C
__Hspace_2                      (abs)        000000
__Hstack                        stack        000000
__Hstruct                       struct       000000
__Htemp                         temp         000000
__Htext                         text         000000
__Htext0                        text0        000000
__Htext1                        text1        000000
__Htext10                       text10       000000
__Htext11                       text11       000000
__Htext12                       text12       000000
__Htext13                       text13       000000
__Htext14                       text14       000000
__Htext15                       text15       000000
__Htext16                       text16       000000
__Htext17                       text17       000000
__Htext18                       text18       000000
__Htext19                       text19       000000
__Htext2                        text2        000000
__Htext20                       text20       000000
__Htext21                       text21       000000
__Htext22                       text22       000000
__Htext23                       text23       000000
__Htext25                       text25       000000
__Htext3                        text3        000000
__Htext4                        text4        000000
__Htext5                        text5        000000
__Htext6                        text6        000000
__Htext7                        text7        000000
__Htext8                        text8        000000
__Htext9                        text9        000000
__LRAM                          (abs)        000001
__Labs1                         abs1         000000
__Lbank0                        bank0        000000
__Lbank1                        bank1        000000
__Lbank2                        bank2        000000
__Lbank3                        bank3        000000
__Lbank4                        bank4        000000
__Lbank5                        bank5        000000
__Lbigbss                       bigbss       000000
__Lbigdata                      bigdata      000000
__Lbigram                       bigram       000000
__Lbss                          bss          000000
__LbssBANK0                     bssBANK0     000000
__LbssBANK1                     bssBANK1     000000
__LbssCOMRAM                    bssCOMRAM    000000
__Lcinit                        cinit        000000
__Lclrtext                      clrtext      000000
__Lcomram                       comram       000000
__Lconfig                       config       300000
__Lconst                        const        000000
__LcstackBANK0                  cstackBANK0  000000
__LcstackBANK1                  cstackBANK1  000000
__LcstackCOMRAM                 cstackCOMRAM 000000
__Ldata                         data         000000
__LdataBANK0                    dataBANK0    000000
__LdataCOMRAM                   dataCOMRAM   000000
__Leeprom_data                  eeprom_data  000000
__Lend_init                     end_init     000018
__Lfarbss                       farbss       000000
__Lfardata                      fardata      000000
__Libigdata                     ibigdata     000000
__Lidata                        idata        000000
__LidataBANK0                   idataBANK0   000000
__LidataCOMRAM                  idataCOMRAM  000000
__Lidloc                        idloc        200000
__Lifardata                     ifardata     000000
__Linit                         init         000018
__Lintcode                      intcode      000008
__Lintcode_body                 intcode_body 000000
__Lintcodelo                    intcodelo    000018
__Lintentry                     intentry     000000
__Lintret                       intret       000000
__Lintsave_regs                 intsave_regs 000000
__Lirdata                       irdata       000000
__Lmediumconst                  mediumconst  000000
__LnvFARRAM                     nvFARRAM     000000
__Lnvbit                        nvbit        000000
__Lnvrram                       nvrram       000000
__Lparam                        rparam       000000
__Lpowerup                      powerup      000018
__Lram                          ram          000000
__Lramtop                       ramtop       000600
__Lrbit                         rbit         000000
__Lrbss                         rbss         000000
__Lrdata                        rdata        000000
__Lreset_vec                    reset_vec    000000
__Lrparam                       rparam       000000
__Lsfr                          sfr          000000
__Lsmallconst                   smallconst   000600
__Lspace_0                      (abs)        000000
__Lspace_1                      (abs)        000000
__Lspace_2                      (abs)        000000
__Lstack                        stack        000000
__Lstruct                       struct       000000
__Ltemp                         temp         000000
__Ltext                         text         000000
__Ltext0                        text0        000000
__Ltext1                        text1        000000
__Ltext10                       text10       000000
__Ltext11                       text11       000000
__Ltext12                       text12       000000
__Ltext13                       text13       000000
__Ltext14                       text14       000000
__Ltext15                       text15       000000
__Ltext16                       text16       000000
__Ltext17                       text17       000000
__Ltext18                       text18       000000
__Ltext19                       text19       000000
__Ltext2                        text2        000000
__Ltext20                       text20       000000
__Ltext21                       text21       000000
__Ltext22                       text22       000000
__Ltext23                       text23       000000
__Ltext25                       text25       000000
__Ltext3                        text3        000000
__Ltext4                        text4        000000
__Ltext5                        text5        000000
__Ltext6                        text6        000000
__Ltext7                        text7        000000
__Ltext8                        text8        000000
__Ltext9                        text9        000000
__S0                            (abs)        30000E
__S1                            (abs)        00018C
__S2                            (abs)        000000
___aldiv                        text23       0018AC
___aldiv@counter                cstackCOMRAM 00001A
___aldiv@dividend               cstackCOMRAM 000012
___aldiv@divisor                cstackCOMRAM 000016
___aldiv@quotient               cstackCOMRAM 00001C
___aldiv@sign                   cstackCOMRAM 00001B
___inthi_sp                     stack        000000
___intlo_sp                     stack        000000
___lmul                         text22       001D66
___lmul@multiplicand            cstackCOMRAM 00001C
___lmul@multiplier              cstackCOMRAM 000018
___lmul@product                 cstackCOMRAM 000020
___lwdiv                        text20       001E64
___lwdiv@counter                cstackCOMRAM 000016
___lwdiv@dividend               cstackCOMRAM 000012
___lwdiv@divisor                cstackCOMRAM 000014
___lwdiv@quotient               cstackCOMRAM 000017
___lwmod                        text19       001EB6
___lwmod@counter                cstackCOMRAM 00001D
___lwmod@dividend               cstackCOMRAM 000019
___lwmod@divisor                cstackCOMRAM 00001B
___sp                           stack        000000
___wmul                         text21       001F82
___wmul@multiplicand            cstackCOMRAM 000014
___wmul@multiplier              cstackCOMRAM 000012
___wmul@product                 cstackCOMRAM 000016
__accesstop                     (abs)        000080
__activetblptr                  (abs)        000002
__end_of_ADsetChannel           text9        002028
__end_of_PIDcontrol             text16       000E2A
__end_of_SetDutyPWM_A           text5        001E64
__end_of_SetDutyPWM_B           text4        001E10
__end_of___aldiv                text23       0019A8
__end_of___lmul                 text22       001DBC
__end_of___lwdiv                text20       001EB6
__end_of___lwmod                text19       001EF8
__end_of___wmul                 text21       001FA8
__end_of__initialization        cinit        001D5C
__end_of__stringdata            smallconst   00069C
__end_of_abs                    text3        001F30
__end_of_atoi                   text14       001B58
__end_of_dpowers                smallconst   00060B
__end_of_initializeErrorArrays  text13       001A8E
__end_of_initializePorts        text12       001C8E
__end_of_isalpha                text10       001F5C
__end_of_isdigit                text15       001FE8
__end_of_isr                    intcode_body 0017B0
__end_of_isupper                text11       001FC8
__end_of_main                   text0        001534
__end_of_printf                 text17       00168C
__end_of_putch                  text18       002034
__end_of_readAD                 text8        001F82
__end_of_readServoPot           text6        001D06
__end_of_setServoPWM            text2        001C14
__end_of_toupper                text1        001FFE
__end_of_windowFilter           text7        0018AC
__end_ofi2_toupper              text25       002014
__initialization                cinit        001D06
__mediumconst                   mediumconst  000000
__pbssBANK0                     bssBANK0     000080
__pbssBANK1                     bssBANK1     000156
__pbssCOMRAM                    bssCOMRAM    000048
__pcinit                        cinit        001D06
__pcstackBANK0                  cstackBANK0  0000A5
__pcstackBANK1                  cstackBANK1  000100
__pcstackCOMRAM                 cstackCOMRAM 000001
__pdataBANK0                    dataBANK0    0000C9
__pdataCOMRAM                   dataCOMRAM   000057
__pidataBANK0                   idataBANK0   002038
__pidataCOMRAM                  idataCOMRAM  002034
__pintcode                      intcode      000008
__pintcode_body                 intcode_body 00168C
__psmallconst                   smallconst   000600
__ptext0                        text0        000E2A
__ptext1                        text1        001FE8
__ptext10                       text10       001F30
__ptext11                       text11       001FA8
__ptext12                       text12       001C14
__ptext13                       text13       0019A8
__ptext14                       text14       001A8E
__ptext15                       text15       001FC8
__ptext16                       text16       00069E
__ptext17                       text17       001534
__ptext18                       text18       002028
__ptext19                       text19       001EB6
__ptext2                        text2        001B58
__ptext20                       text20       001E64
__ptext21                       text21       001F82
__ptext22                       text22       001D66
__ptext23                       text23       0018AC
__ptext25                       text25       001FFE
__ptext3                        text3        001EF8
__ptext4                        text4        001DBC
__ptext5                        text5        001E10
__ptext6                        text6        001C8E
__ptext7                        text7        0017B0
__ptext8                        text8        001F5C
__ptext9                        text9        002014
__ramtop                        ramtop       000600
__size_of_ADsetChannel          (abs)        000000
__size_of_PIDcontrol            (abs)        000000
__size_of_SetDutyPWM_A          (abs)        000000
__size_of_SetDutyPWM_B          (abs)        000000
__size_of___aldiv               (abs)        000000
__size_of___lmul                (abs)        000000
__size_of___lwdiv               (abs)        000000
__size_of___lwmod               (abs)        000000
__size_of___wmul                (abs)        000000
__size_of_abs                   (abs)        000000
__size_of_atoi                  (abs)        000000
__size_of_initializeErrorArrays (abs)        000000
__size_of_initializePorts       (abs)        000000
__size_of_isalpha               (abs)        000000
__size_of_isdigit               (abs)        000000
__size_of_isr                   (abs)        000000
__size_of_isupper               (abs)        000000
__size_of_main                  (abs)        000000
__size_of_printf                (abs)        000000
__size_of_putch                 (abs)        000000
__size_of_readAD                (abs)        000000
__size_of_readServoPot          (abs)        000000
__size_of_setServoPWM           (abs)        000000
__size_of_toupper               (abs)        000000
__size_of_windowFilter          (abs)        000000
__size_ofi2_toupper             (abs)        000000
__smallconst                    smallconst   000600
__stringdata                    smallconst   00060B
_abs                            text3        001EF8
_atoi                           text14       001A8E
_channel                        dataCOMRAM   000059
_commandPot                     bssBANK0     00009E
_displayFlag                    bssBANK0     0000A4
_dpowers                        smallconst   000601
_errorDerivative                bssCOMRAM    000048
_initializeErrorArrays          text13       0019A8
_initializePorts                text12       001C14
_isalpha                        text10       001F30
_isalpha$975                    cstackCOMRAM 000016
_isdigit                        text15       001FC8
_isdigit$978                    cstackCOMRAM 000013
_isr                            intcode      000008
_isupper                        text11       001FA8
_isupper$981                    cstackCOMRAM 000013
_main                           text0        000E2A
_printf                         text17       001534
_putch                          text18       002028
_readAD                         text8        001F5C
_readServoPot                   text6        001C8E
_servoIDselect                  dataBANK0    0000C9
_servoWindowArray               bssBANK1     000156
_setServoPWM                    text2        001B58
_toupper                        text1        001FE8
_value                          bssBANK0     0000A0
_windowFilter                   text7        0017B0
abs@a                           cstackCOMRAM 000012
atoi@a                          cstackCOMRAM 00001D
atoi@s                          cstackCOMRAM 000018
atoi@sign                       cstackCOMRAM 00001C
end_of_initialization           cinit        001D5C
i2_toupper                      text25       001FFE
i2toupper@c                     cstackCOMRAM 000001
initializeErrorArrays@i         cstackCOMRAM 00001A
initializeErrorArrays@j         cstackCOMRAM 00001C
int_func                        intcode_body 00168C
intlevel0                       text         000000
intlevel1                       text         000000
intlevel2                       text         000000
intlevel3                       text         000000
isalpha@c                       cstackCOMRAM 000017
isdigit@c                       cstackCOMRAM 000014
isr@Timer2Counter               bssCOMRAM    000054
isr@ch                          cstackCOMRAM 000011
isr@dummy                       cstackCOMRAM 000010
isr@i                           bssCOMRAM    000056
isupper@c                       cstackCOMRAM 000014
main@PWMout                     cstackBANK1  000144
main@arrFilter                  cstackBANK1  000100
main@ch                         cstackBANK1  000153
main@command                    cstackBANK1  00014F
main@error                      cstackBANK1  000142
main@filterIndex                cstackBANK1  000150
main@filterSum                  cstackBANK1  000149
main@i                          cstackBANK1  00014D
main@i_552                      cstackBANK1  000154
main@mode                       cstackBANK1  000148
main@p                          cstackBANK1  00014E
main@q                          cstackBANK1  000152
main@runEnable                  cstackBANK1  000146
main@servoID                    cstackBANK1  000151
main@servoPot                   cstackBANK1  000140
main@windowFilterIndex          cstackBANK1  000147
printf@_val                     cstackCOMRAM 000030
printf@ap                       cstackCOMRAM 00002E
printf@c                        cstackCOMRAM 000035
printf@f                        cstackCOMRAM 00001E
printf@flag                     cstackCOMRAM 00002C
printf@prec                     cstackCOMRAM 00002D
putch@byte                      cstackCOMRAM 000012
readAD@ADresult                 cstackCOMRAM 000016
readServoPot@filterIndex        cstackCOMRAM 000034
readServoPot@servoID            cstackCOMRAM 000032
readServoPot@servoPotFiltered   cstackCOMRAM 000039
readServoPot@servoPotValue      cstackCOMRAM 000037
setServoPWM@PWMout              cstackCOMRAM 00001B
setServoPWM@servoID             cstackCOMRAM 00001D
stackhi                         (abs)        0005FF
stacklo                         (abs)        00018C
start                           init         000018
start_initialization            cinit        001D06
toupper@c                       cstackCOMRAM 000012
windowFilter@highData           cstackCOMRAM 00002E
windowFilter@i                  cstackCOMRAM 000031
windowFilter@j                  cstackCOMRAM 000030
windowFilter@lowData            cstackCOMRAM 00002C
windowFilter@midData            cstackCOMRAM 00002A
windowFilter@servoID            cstackCOMRAM 000018
windowFilter@sortArr            cstackCOMRAM 00001C


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 122 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   84[BANK1 ] int 
  arrFilter      64    0[BANK1 ] short [32]
  filterSum       4   73[BANK1 ] long 
  PWMout          2   68[BANK1 ] short 
  error           2   66[BANK1 ] short 
  servoPot        2   64[BANK1 ] short 
  ch              1   83[BANK1 ] unsigned char 
  q               1   82[BANK1 ] unsigned char 
  servoID         1   81[BANK1 ] unsigned char 
  filterIndex     1   80[BANK1 ] unsigned char 
  command         1   79[BANK1 ] unsigned char 
  p               1   78[BANK1 ] unsigned char 
  i               1   77[BANK1 ] unsigned char 
  mode            1   72[BANK1 ] unsigned char 
  windowFilter    1   71[BANK1 ] unsigned char 
  runEnable       1   70[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0      86       0       0       0       0
      Temps:          6       0       0       0       0       0       0
      Totals:         6       0      86       0       0       0       0
Total ram usage:       92 bytes
 Hardware stack levels required when called:    5
 This function calls:
		_ADsetChannel
		_PIDcontrol
		_SetDutyPWM_A
		_SetDutyPWM_B
		___aldiv
		___wmul
		_atoi
		_initializeErrorArrays
		_initializePorts
		_isalpha
		_isdigit
		_printf
		_putch
		_readAD
		_readServoPot
		_setServoPWM
		_toupper
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _toupper *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\toupper.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setServoPWM *****************
 Defined at:
		line 261 in file "../main.c"
 Parameters:    Size  Location     Type
  servoID         1    wreg     unsigned char 
  PWMout          2   26[COMRAM] short 
 Auto vars:     Size  Location     Type
  servoID         1   28[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, prodl, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_SetDutyPWM_A
		_SetDutyPWM_B
		_abs
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _abs *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\abs.c"
 Parameters:    Size  Location     Type
  a               2   17[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   17[COMRAM] int 
 Registers used:
		wreg, status,2, status,0, prodl
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_setServoPWM
 This function uses a non-reentrant model


 *************** function _SetDutyPWM_B *****************
 Defined at:
		line 436 in file "../main.c"
 Parameters:    Size  Location     Type
  dutyCycle       2   17[COMRAM] unsigned short 
 Auto vars:     Size  Location     Type
  ndutyCycle      2   24[COMRAM] unsigned short 
  lowBits         2   21[COMRAM] unsigned short 
  maskReg         1   23[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_setServoPWM
 This function uses a non-reentrant model


 *************** function _SetDutyPWM_A *****************
 Defined at:
		line 449 in file "../main.c"
 Parameters:    Size  Location     Type
  dutyCycle       2   17[COMRAM] unsigned short 
 Auto vars:     Size  Location     Type
  ndutyCycle      2   24[COMRAM] unsigned short 
  lowBits         2   21[COMRAM] unsigned short 
  maskReg         1   23[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_setServoPWM
 This function uses a non-reentrant model


 *************** function _readServoPot *****************
 Defined at:
		line 291 in file "../main.c"
 Parameters:    Size  Location     Type
  servoID         2   49[COMRAM] short 
  filterIndex     1   51[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  servoPotFilt    2   56[COMRAM] short 
  servoPotValu    2   54[COMRAM] short 
 Return value:  Size  Location     Type
                  2   49[COMRAM] short 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_ADsetChannel
		___wmul
		_readAD
		_windowFilter
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _windowFilter *****************
 Defined at:
		line 533 in file "../main.c"
 Parameters:    Size  Location     Type
  servoID         2   23[COMRAM] short 
 Auto vars:     Size  Location     Type
  sortArr        14   27[COMRAM] short [7]
  highData        2   45[COMRAM] short 
  lowData         2   43[COMRAM] short 
  midData         2   41[COMRAM] short 
  i               1   48[COMRAM] unsigned char 
  j               1   47[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   23[COMRAM] short 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:        22       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:        26       0       0       0       0       0       0
Total ram usage:       26 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___wmul
 This function is called by:
		_readServoPot
 This function uses a non-reentrant model


 *************** function _readAD *****************
 Defined at:
		line 517 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ADresult        2   21[COMRAM] short 
 Return value:  Size  Location     Type
                  2   17[COMRAM] short 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_readServoPot
 This function uses a non-reentrant model


 *************** function _ADsetChannel *****************
 Defined at:
		line 425 in file "../main.c"
 Parameters:    Size  Location     Type
  channel         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  channel         1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_readServoPot
 This function uses a non-reentrant model


 *************** function _isalpha *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isalpha.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1   22[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_isupper
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _isupper *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isupper.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1   19[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_isalpha
 This function uses a non-reentrant model


 *************** function _initializePorts *****************
 Defined at:
		line 303 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initializeErrorArrays *****************
 Defined at:
		line 102 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  j               2   27[COMRAM] unsigned short 
  i               2   25[COMRAM] unsigned short 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___wmul
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _atoi *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\atoi.c"
 Parameters:    Size  Location     Type
  s               2   23[COMRAM] PTR const unsigned char 
		 -> NUMbuffer(17), 
 Auto vars:     Size  Location     Type
  a               2   28[COMRAM] int 
  sign            1   27[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   23[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___wmul
		_isdigit
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _isdigit *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1   19[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_atoi
 This function uses a non-reentrant model


 *************** function _PIDcontrol *****************
 Defined at:
		line 463 in file "../main.c"
 Parameters:    Size  Location     Type
  servoID         2   53[COMRAM] short 
  error           2   55[COMRAM] short 
 Auto vars:     Size  Location     Type
  PIDcorrectio    4   32[BANK0 ] long 
  lngError        4   28[BANK0 ] long 
  DCorr           4   22[BANK0 ] long 
  ICorr           4   18[BANK0 ] long 
  PCorr           4   14[BANK0 ] long 
  pastError       4    4[BANK0 ] long 
  diffError       4    0[BANK0 ] long 
  PWMout          2   26[BANK0 ] short 
  intDCorr        2   12[BANK0 ] short 
  intICorr        2   10[BANK0 ] short 
  intPCorr        2    8[BANK0 ] short 
 Return value:  Size  Location     Type
                  2   53[COMRAM] short 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0      36       0       0       0       0       0
      Temps:          8       0       0       0       0       0       0
      Totals:        12      36       0       0       0       0       0
Total ram usage:       48 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___aldiv
		___lmul
		___wmul
		_printf
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _printf *****************
 Defined at:
		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
 Parameters:    Size  Location     Type
  f               2   29[COMRAM] PTR const unsigned char 
		 -> STR_8(38), STR_7(33), STR_6(13), STR_5(12), 
		 -> STR_4(13), STR_3(5), STR_2(6), STR_1(25), 
 Auto vars:     Size  Location     Type
  _val            5   47[COMRAM] struct .
  ap              2   45[COMRAM] PTR void [1]
		 -> ?_printf(2), 
  c               1   52[COMRAM] char 
  prec            1   44[COMRAM] char 
  flag            1   43[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   29[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:        12       0       0       0       0       0       0
      Locals:        10       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:        24       0       0       0       0       0       0
Total ram usage:       24 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___lwdiv
		___lwmod
		_putch
 This function is called by:
		_main
		_PIDcontrol
 This function uses a non-reentrant model


 *************** function _putch *****************
 Defined at:
		line 416 in file "../main.c"
 Parameters:    Size  Location     Type
  byte            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  byte            1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_printf
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
 Parameters:    Size  Location     Type
  dividend        2   24[COMRAM] unsigned int 
  divisor         2   26[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1   28[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   24[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_printf
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
 Parameters:    Size  Location     Type
  dividend        2   17[COMRAM] unsigned int 
  divisor         2   19[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2   22[COMRAM] unsigned int 
  counter         1   21[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   17[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_printf
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2   17[COMRAM] unsigned int 
  multiplicand    2   19[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   21[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2   17[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_initializeErrorArrays
		_main
		_readServoPot
		_PIDcontrol
		_windowFilter
		_atoi
 This function uses a non-reentrant model


 *************** function ___lmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
 Parameters:    Size  Location     Type
  multiplier      4   23[COMRAM] unsigned long 
  multiplicand    4   27[COMRAM] unsigned long 
 Auto vars:     Size  Location     Type
  product         4   31[COMRAM] unsigned long 
 Return value:  Size  Location     Type
                  4   23[COMRAM] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         8       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_PIDcontrol
 This function uses a non-reentrant model


 *************** function ___aldiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
 Parameters:    Size  Location     Type
  dividend        4   17[COMRAM] long 
  divisor         4   21[COMRAM] long 
 Auto vars:     Size  Location     Type
  quotient        4   27[COMRAM] long 
  sign            1   26[COMRAM] unsigned char 
  counter         1   25[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   17[COMRAM] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         8       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        14       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_PIDcontrol
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 366 in file "../main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ch              1   16[COMRAM] unsigned char 
  dummy           1   15[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:         14       0       0       0       0       0       0
      Totals:        16       0       0       0       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2_toupper
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function i2_toupper *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\toupper.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_isr
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
../main.c
		_putch         		CODE           	2028	0000	12
		_windowFilter  		CODE           	17B0	0000	252
		_SetDutyPWM_A  		CODE           	1E10	0000	84
		_SetDutyPWM_B  		CODE           	1DBC	0000	84
		_main          		CODE           	0E2A	0000	1802
		_initializePort		CODE           	1C14	0000	122
		_setServoPWM   		CODE           	1B58	0000	188
		_ADsetChannel  		CODE           	2014	0000	20
		_isr           		CODE           	0008	0000	6056
		_PIDcontrol    		CODE           	069E	0000	1932
		_readServoPot  		CODE           	1C8E	0000	120
		_initializeErro		CODE           	19A8	0000	230
		_readAD        		CODE           	1F5C	0000	38

../main.c estimated size: 10940

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c
		_printf        		CODE           	1534	0000	344

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c estimated size: 344

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c
		___lwmod       		CODE           	1EB6	0000	66

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c estimated size: 66

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c
		___wmul        		CODE           	1F82	0000	38

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c estimated size: 38

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\atoi.c
		_atoi          		CODE           	1A8E	0000	202

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\atoi.c estimated size: 202

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isupper.c
		_isupper       		CODE           	1FA8	0000	32

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isupper.c estimated size: 32

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c
		___lmul        		CODE           	1D66	0000	86

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c estimated size: 86

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c
		___lwdiv       		CODE           	1E64	0000	82

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c estimated size: 82

shared
		__stringdata   		SMALLCONST     	060B	0000	145
		_dpowers       		SMALLCONST     	0601	0000	10
		__initializatio		CODE           	1D06	0000	86
		i2_toupper     		CODE           	1FFE	0000	22

shared estimated size: 263

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c
		___aldiv       		CODE           	18AC	0000	252

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c estimated size: 252

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\toupper.c
		_toupper       		CODE           	1FE8	0000	22

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\toupper.c estimated size: 22

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isalpha.c
		_isalpha       		CODE           	1F30	0000	44

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isalpha.c estimated size: 44

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\abs.c
		_abs           		CODE           	1EF8	0000	56

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\abs.c estimated size: 56

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c
		_isdigit       		CODE           	1FC8	0000	32

C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c estimated size: 32

